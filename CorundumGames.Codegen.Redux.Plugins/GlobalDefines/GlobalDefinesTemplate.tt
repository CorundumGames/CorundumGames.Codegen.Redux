<#@ template language="C#" visibility="internal" #>
<#@ output extension=".cs" #>
<#@ import namespace="Genesis.Plugin" #>

public static class DefineSymbols
{
    public static System.Collections.Generic.IReadOnlyList<string> Symbols => _symbols;

    private static readonly string[] _symbols = new string[]
    {
<#
    foreach (var d in _defines)
    {
#>
#if <#= d #>
        "<#= d #>",
#endif
<#
    }
#>
    };
}

<#+
    private readonly string[] _defines;

    public GlobalDefinesTemplate(IEnumerable<string> defines)
    {
        if (defines == null)
        {
            throw new ArgumentNullException(nameof(defines));
        }

        _defines = defines
            .OrderBy(d => d)
            .Distinct()
            .WhereNotNull()
            .ToArray();
    }
#>
