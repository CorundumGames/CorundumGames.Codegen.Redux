// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by JetBrains T4 Processor
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CorundumGames.CodeGeneration.Plugins.EntityIndex
{
    using System;
    #line 2 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
using System.Collections.Generic;
    #line default
    #line hidden
    #line 3 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
using Entitas.CodeGeneration.Plugins;
    #line default
    #line hidden
    #line 4 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
using DesperateDevs.Utils;
    #line default
    #line hidden
    #line 5 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
using System.Linq;
    #line default
    #line hidden
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("JetBrains.ForTea.TextTemplating", "42.42.42.42")]
    public partial class EntityIndexGeneratorTemplate : EntityIndexGeneratorTemplateBase
    {
        #line 325 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"

    private readonly EntityIndexData[] _data;
    private readonly IgnoreNamespacesConfig _ignoreNamespacesConfig;

    public EntityIndexGeneratorTemplate(EntityIndexData[] data, IgnoreNamespacesConfig ignoreNamespacesConfig)
    {
        _data = data;
        _ignoreNamespacesConfig = ignoreNamespacesConfig;
    }

        const string CLASS_TEMPLATE =
        @"public partial class Contexts {

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeEntityIndices() {
${addIndices}
    }
}

public static class ContextsExtensions {

${getIndices}
}";


        const string ADD_INDEX_TEMPLATE =
        @"        ${contextName}.AddEntityIndex(new ${IndexType}<${ContextName}Entity, ${KeyType}>(
            ${IndexName},
            ${contextName}.GetGroup(${ContextName}Matcher.${Matcher}),
            (e, c) => ((${ComponentType})c).${MemberName}));";

        const string ADD_CUSTOM_INDEX_TEMPLATE =
        @"        ${contextName}.AddEntityIndex(new ${IndexType}(${contextName}));";

        const string GET_INDEX_TEMPLATE =
        @"    public static System.Collections.Generic.HashSet<${ContextName}Entity> GetEntitiesWith${IndexName}(this ${ContextName}Context context, ${KeyType} ${MemberName}) {
        return ((${IndexType}<${ContextName}Entity, ${KeyType}>)context.GetEntityIndex(Contexts.${IndexName})).GetEntities(${MemberName});
    }";

        const string GET_PRIMARY_INDEX_TEMPLATE =
        @"    public static ${ContextName}Entity GetEntityWith${IndexName}(this ${ContextName}Context context, ${KeyType} ${MemberName}) {
        return ((${IndexType}<${ContextName}Entity, ${KeyType}>)context.GetEntityIndex(Contexts.${IndexName})).GetEntity(${MemberName});
    }";

        const string CUSTOM_METHOD_TEMPLATE =
        @"    public static ${ReturnType} ${MethodName}(this ${ContextName}Context context, ${methodArgs}) {
        return ((${IndexType})(context.GetEntityIndex(Contexts.${IndexName}))).${MethodName}(${args});
    }
";


    string generateAddMethods(EntityIndexData data)
    {
        return string.Join("\n", data.GetContextNames()
            .Aggregate(new List<string>(), (addMethods, contextName) =>
            {
                addMethods.Add(generateAddMethod(data, contextName));
                return addMethods;
            }).ToArray());
    }

    string generateAddMethod(EntityIndexData data, string contextName)
    {
        return data.IsCustom()
            ? generateCustomMethods(data)
            : generateMethods(data, contextName);
    }

    string generateCustomMethods(EntityIndexData data)
    {
        return ADD_CUSTOM_INDEX_TEMPLATE
            .Replace("${contextName}", data.GetContextNames()[0].LowercaseFirst())
            .Replace("${IndexType}", data.GetEntityIndexType());
    }

    string generateMethods(EntityIndexData data, string contextName)
    {
        return ADD_INDEX_TEMPLATE
            .Replace("${contextName}", contextName.LowercaseFirst())
            .Replace("${ContextName}", contextName)
            .Replace("${IndexName}", data.GetHasMultiple()
                ? data.GetEntityIndexName() + data.GetMemberName().UppercaseFirst()
                : data.GetEntityIndexName())
            .Replace("${Matcher}", data.GetEntityIndexName())
            .Replace("${IndexType}", data.GetEntityIndexType())
            .Replace("${KeyType}", data.GetKeyType())
            .Replace("${ComponentType}", data.GetComponentType())
            .Replace("${MemberName}", data.GetMemberName())
            .Replace("${componentName}", data.GetComponentType()
                .ToComponentName(_ignoreNamespacesConfig.ignoreNamespaces)
                .LowercaseFirst()
                .AddPrefixIfIsKeyword());
    }

    string generateGetMethods(EntityIndexData data)
    {
        return string.Join("\n\n", data.GetContextNames()
            .Aggregate(new List<string>(), (getMethods, contextName) =>
            {
                getMethods.Add(generateGetMethod(data, contextName));
                return getMethods;
            }).ToArray());
    }

    string generateGetMethod(EntityIndexData data, string contextName)
    {
        var template = "";
        if (data.GetEntityIndexType() == "Entitas.EntityIndex")
        {
            template = GET_INDEX_TEMPLATE;
        }
        else if (data.GetEntityIndexType() == "Entitas.PrimaryEntityIndex")
        {
            template = GET_PRIMARY_INDEX_TEMPLATE;
        }
        else
        {
            return getCustomMethods(data);
        }

        return template
            .Replace("${ContextName}", contextName)
            .Replace("${IndexName}", data.GetHasMultiple()
                ? data.GetEntityIndexName() + data.GetMemberName().UppercaseFirst()
                : data.GetEntityIndexName())
            .Replace("${IndexType}", data.GetEntityIndexType())
            .Replace("${KeyType}", data.GetKeyType())
            .Replace("${MemberName}", data.GetMemberName());
    }

    string getCustomMethods(EntityIndexData data)
    {
        return string.Join("\n", data.GetCustomMethods()
            .Select(m => CUSTOM_METHOD_TEMPLATE
                .Replace("${ReturnType}", m.returnType)
                .Replace("${MethodName}", m.methodName)
                .Replace("${ContextName}", data.GetContextNames()[0])
                .Replace("${methodArgs}",
                    string.Join(", ", m.parameters.Select(p => p.type + " " + p.name).ToArray()))
                .Replace("${IndexType}", data.GetEntityIndexType())
                .Replace("${IndexName}", data.GetHasMultiple()
                    ? data.GetEntityIndexName() + data.GetMemberName().UppercaseFirst()
                    : data.GetEntityIndexName())
                .Replace("${args}", string.Join(", ", m.parameters.Select(p => p.name).ToArray()))).ToArray());
    }

    private static string IndexName(EntityIndexData d)
    {
        return d.GetHasMultiple()
            ? d.GetEntityIndexName() + d.GetMemberName().UppercaseFirst()
            : d.GetEntityIndexName();
    }

        
        #line default
        #line hidden
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            this.Write("\r\npublic partial class Contexts\r\n{\r\n    private System.Collections.Generic.HashSet<Entitas.IEntityIndex> _indexes =\r\n        new System.Collections.Generic.HashSet<Entitas.IEntityIndex>(64);\r\n");
            #line 11 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"

    foreach (var d in _data)
    {
        var indexName = IndexName(d);

            
            #line default
            #line hidden
            this.Write("    public const string ");
            
            #line 16 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(indexName));
            
            #line default
            #line hidden
            this.Write(" = \"");
            
            #line 16 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(indexName));
            
            #line default
            #line hidden
            this.Write("\";\r\n");
            #line 17 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("\r\n    [Entitas.CodeGeneration.Attributes.PostConstructor]\r\n    public void InitializeEntityIndices()\r\n    {\r\n");
            #line 24 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"

    foreach (var d in _data)
    {
        foreach (var ContextName in d.GetContextNames())
        {
            var contextName = ContextName.LowercaseFirst();
            var IndexType = d.GetEntityIndexType();

            if (d.IsCustom())
            {

            
            #line default
            #line hidden
            this.Write("        {\r\n            var index = new ");
            
            #line 36 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IndexType));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 36 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(contextName));
            
            #line default
            #line hidden
            this.Write(");\r\n            ");
            
            #line 37 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(contextName));
            
            #line default
            #line hidden
            this.Write(".AddEntityIndex(index);\r\n            _indexes.Add(index);\r\n        }\r\n\r\n");
            #line 41 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"

            }
            else
            {

            
            #line default
            #line hidden
            this.Write("        {\r\n            var index = new ");
            
            #line 47 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IndexType));
            
            #line default
            #line hidden
            this.Write("<");
            
            #line 47 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ContextName));
            
            #line default
            #line hidden
            this.Write("Entity, ");
            
            #line 47 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(d.GetKeyType()));
            
            #line default
            #line hidden
            this.Write(">(\r\n                ");
            
            #line 48 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(IndexName(d)));
            
            #line default
            #line hidden
            this.Write(",\r\n                ");
            
            #line 49 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(contextName));
            
            #line default
            #line hidden
            this.Write(".GetGroup(");
            
            #line 49 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ContextName));
            
            #line default
            #line hidden
            this.Write("Matcher.");
            
            #line 49 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(d.GetEntityIndexName()));
            
            #line default
            #line hidden
            this.Write("),\r\n                (e, c) => ((");
            
            #line 50 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(d.GetComponentType()));
            
            #line default
            #line hidden
            this.Write(")c).");
            
            #line 50 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(d.GetMemberName()));
            
            #line default
            #line hidden
            this.Write("\r\n            );\r\n            ");
            
            #line 52 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(contextName));
            
            #line default
            #line hidden
            this.Write(".AddEntityIndex(index);\r\n            _indexes.Add(index);\r\n        }\r\n\r\n");
            #line 56 "C:\Users\Jesse\Unshared Code\Chromavaders\Codegen\EntityIndex\EntityIndexGeneratorTemplate.tt"

            }
        }
    }

            
            #line default
            #line hidden
            this.Write("    }\r\n}\r\n\r\npublic static class ContextsExtensions {\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetGridEntities(this GameContext context, Player player) {\r\n        return ((AllGridEntitiesIndex)(context.GetEntityIndex(Contexts.AllGridEntitiesIndex))).GetGridEntities(player);\r\n    }\r\n\r\n\r\n    public static GameEntity GetBlockAtCell(this GameContext context, Player player, UnityEngine.Vector2Int cell) {\r\n        return ((BlockCellIndex)(context.GetEntityIndex(Contexts.BlockCellIndex))).GetBlockAtCell(player, cell);\r\n    }\r\n\r\n    public static GameEntity GetBlockAtCell(this GameContext context, Player player, int x, int y) {\r\n        return ((BlockCellIndex)(context.GetEntityIndex(Contexts.BlockCellIndex))).GetBlockAtCell(player, x, y);\r\n    }\r\n\r\n\r\n    public static GameEntity GetBlockGrid(this GameContext context, Player player) {\r\n        return ((BlockGridIndex)(context.GetEntityIndex(Contexts.BlockGridIndex))).GetBlockGrid(player);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetBlocks(this GameContext context, Player index) {\r\n        return ((BlockIndex)(context.GetEntityIndex(Contexts.BlockIndex))).GetBlocks(index);\r\n    }\r\n\r\n\r\n    public static TimerEntity GetBonusLevelTimer(this TimerContext context, Player index) {\r\n        return ((BonusLevelTimerIndex)(context.GetEntityIndex(Contexts.BonusLevelTimerIndex))).GetBonusLevelTimer(index);\r\n    }\r\n\r\n\r\n    public static UiEntity GetBonusRoundIntroTimeline(this UiContext context, Player index) {\r\n        return ((BonusRoundIntroTimelineIndex)(context.GetEntityIndex(Contexts.BonusRoundIntroTimelineIndex))).GetBonusRoundIntroTimeline(index);\r\n    }\r\n\r\n\r\n    public static UiEntity GetBonusRoundOutroTimeline(this UiContext context, Player index) {\r\n        return ((BonusRoundOutroTimelineIndex)(context.GetEntityIndex(Contexts.BonusRoundOutroTimelineIndex))).GetBonusRoundOutroTimeline(index);\r\n    }\r\n\r\n\r\n    public static UiEntity GetBonusTimerDisplay(this UiContext context, Player index) {\r\n        return ((BonusTimerDisplayIndex)(context.GetEntityIndex(Contexts.BonusTimerDisplayIndex))).GetBonusTimerDisplay(index);\r\n    }\r\n\r\n\r\n    public static GlobalEntity GetBoolSetting(this GlobalContext context, string key) {\r\n        return ((BoolSettingIndex)(context.GetEntityIndex(Contexts.BoolSettingIndex))).GetBoolSetting(key);\r\n    }\r\n\r\n\r\n    public static TimerEntity GetDumpingGarbageTimer(this TimerContext context, Player index) {\r\n        return ((DumpingGarbageTimerIndex)(context.GetEntityIndex(Contexts.DumpingGarbageTimerIndex))).GetDumpingGarbageTimer(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<StatusEntity> GetEnemiesShotCounter(this StatusContext context, Player index) {\r\n        return ((EnemiesShotIndex)(context.GetEntityIndex(Contexts.EnemiesShotIndex))).GetEnemiesShotCounter(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetEnemyBullets(this GameContext context, Player index) {\r\n        return ((EnemyBulletIndex)(context.GetEntityIndex(Contexts.EnemyBulletIndex))).GetEnemyBullets(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetEnemies(this GameContext context, Player index) {\r\n        return ((EnemyIndex)(context.GetEntityIndex(Contexts.EnemyIndex))).GetEnemies(index);\r\n    }\r\n\r\n\r\n    public static StatusEntity GetEnemySpawner(this StatusContext context, Player player) {\r\n        return ((EnemySpawnerIndex)(context.GetEntityIndex(Contexts.EnemySpawnerIndex))).GetEnemySpawner(player);\r\n    }\r\n\r\n\r\n    public static GameEntity GetEnemyWave(this GameContext context, Player player) {\r\n        return ((EnemyWaveIndex)(context.GetEntityIndex(Contexts.EnemyWaveIndex))).GetEnemyWave(player);\r\n    }\r\n\r\n\r\n    public static GlobalEntity GetFloatSetting(this GlobalContext context, string key) {\r\n        return ((FloatSettingIndex)(context.GetEntityIndex(Contexts.FloatSettingIndex))).GetFloatSetting(key);\r\n    }\r\n\r\n\r\n    public static GameEntity GetEntityWithGameObject(this GameContext context, UnityEngine.GameObject gameObject) {\r\n        return ((Entitas.PrimaryEntityIndex<GameEntity, UnityEngine.GameObject>)context.GetEntityIndex(Contexts.GameObject)).GetEntity(gameObject);\r\n    }\r\n\r\n    public static UiEntity GetEntityWithGameObject(this UiContext context, UnityEngine.GameObject gameObject) {\r\n        return ((Entitas.PrimaryEntityIndex<UiEntity, UnityEngine.GameObject>)context.GetEntityIndex(Contexts.GameObject)).GetEntity(gameObject);\r\n    }\r\n\r\n    public static GlobalEntity GetEntityWithGameObject(this GlobalContext context, UnityEngine.GameObject gameObject) {\r\n        return ((Entitas.PrimaryEntityIndex<GlobalEntity, UnityEngine.GameObject>)context.GetEntityIndex(Contexts.GameObject)).GetEntity(gameObject);\r\n    }\r\n\r\n    public static GameEntity GetGameOverPlayableDirector(this GameContext context, Player player) {\r\n        return ((GameOverPlayableDirectorIndex)(context.GetEntityIndex(Contexts.GameOverPlayableDirectorIndex))).GetGameOverPlayableDirector(player);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetEntitiesAtCell(this GameContext context, Player player, UnityEngine.Vector2Int cell) {\r\n        return ((GridEntityIndex)(context.GetEntityIndex(Contexts.GridEntityIndex))).GetEntitiesAtCell(player, cell);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetHeldBlocks(this GameContext context, Player player) {\r\n        return ((HeldBlockIndex)(context.GetEntityIndex(Contexts.HeldBlockIndex))).GetHeldBlocks(player);\r\n    }\r\n\r\n\r\n    public static GameEntity GetEntityWithId(this GameContext context, int id) {\r\n        return ((Entitas.PrimaryEntityIndex<GameEntity, int>)context.GetEntityIndex(Contexts.Id)).GetEntity(id);\r\n    }\r\n\r\n    public static TimerEntity GetEntityWithId(this TimerContext context, int id) {\r\n        return ((Entitas.PrimaryEntityIndex<TimerEntity, int>)context.GetEntityIndex(Contexts.Id)).GetEntity(id);\r\n    }\r\n\r\n    public static GlobalEntity GetEntityWithId(this GlobalContext context, int id) {\r\n        return ((Entitas.PrimaryEntityIndex<GlobalEntity, int>)context.GetEntityIndex(Contexts.Id)).GetEntity(id);\r\n    }\r\n\r\n    public static UiEntity GetEntityWithId(this UiContext context, int id) {\r\n        return ((Entitas.PrimaryEntityIndex<UiEntity, int>)context.GetEntityIndex(Contexts.Id)).GetEntity(id);\r\n    }\r\n\r\n    public static GlobalEntity GetIntSetting(this GlobalContext context, string key) {\r\n        return ((IntSettingIndex)(context.GetEntityIndex(Contexts.IntSettingIndex))).GetIntSetting(key);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetLivingEnemies(this GameContext context, Player index) {\r\n        return ((LivingEnemyIndex)(context.GetEntityIndex(Contexts.LivingEnemyIndex))).GetLivingEnemies(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetMatchingBlocks(this GameContext context, Player index) {\r\n        return ((MatchingBlockIndex)(context.GetEntityIndex(Contexts.MatchingBlockIndex))).GetMatchingBlocks(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetMovingBlocks(this GameContext context, Player index) {\r\n        return ((MovingBlockIndex)(context.GetEntityIndex(Contexts.MovingBlockIndex))).GetMovingBlocks(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetMovingEntities(this GameContext context, Player index) {\r\n        return ((MovingEntityIndex)(context.GetEntityIndex(Contexts.MovingEntityIndex))).GetMovingEntities(index);\r\n    }\r\n\r\n\r\n    public static GameEntity GetEntityWithName(this GameContext context, string name) {\r\n        return ((Entitas.PrimaryEntityIndex<GameEntity, string>)context.GetEntityIndex(Contexts.Name)).GetEntity(name);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetEntitiesWithParent(this GameContext context, int parentId) {\r\n        return ((Entitas.EntityIndex<GameEntity, int>)context.GetEntityIndex(Contexts.Parent)).GetEntities(parentId);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<UiEntity> GetEntitiesWithParent(this UiContext context, int parentId) {\r\n        return ((Entitas.EntityIndex<UiEntity, int>)context.GetEntityIndex(Contexts.Parent)).GetEntities(parentId);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<GlobalEntity> GetEntitiesWithParent(this GlobalContext context, int parentId) {\r\n        return ((Entitas.EntityIndex<GlobalEntity, int>)context.GetEntityIndex(Contexts.Parent)).GetEntities(parentId);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<TimerEntity> GetPauseIfPlayerDeadTimers(this TimerContext context, Player index) {\r\n        return ((PauseIfPlayerDeadTimerIndex)(context.GetEntityIndex(Contexts.PauseIfPlayerDeadTimerIndex))).GetPauseIfPlayerDeadTimers(index);\r\n    }\r\n\r\n\r\n    public static TimerEntity GetPendingRisingGarbageTimer(this TimerContext context, Player index) {\r\n        return ((PendingRisingGarbageTimerIndex)(context.GetEntityIndex(Contexts.PendingRisingGarbageTimerIndex))).GetPendingRisingGarbageTimer(index);\r\n    }\r\n\r\n\r\n    public static UiEntity GetPendingWaveDisplay(this UiContext context, Player index) {\r\n        return ((PendingWaveDisplayIndex)(context.GetEntityIndex(Contexts.PendingWaveDisplayIndex))).GetPendingWaveDisplay(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetPlayerBullets(this GameContext context, Player index) {\r\n        return ((PlayerBulletIndex)(context.GetEntityIndex(Contexts.PlayerBulletIndex))).GetPlayerBullets(index);\r\n    }\r\n\r\n\r\n    public static TimerEntity GetPlayerMoveCooldownTimer(this TimerContext context, Player index) {\r\n        return ((PlayerMoveCooldownTimerIndex)(context.GetEntityIndex(Contexts.PlayerMoveCooldownTimerIndex))).GetPlayerMoveCooldownTimer(index);\r\n    }\r\n\r\n\r\n    public static TimerEntity GetPlayerRespawnInvincibilityTimer(this TimerContext context, Player index) {\r\n        return ((PlayerRespawnInvincibilityTimerIndex)(context.GetEntityIndex(Contexts.PlayerRespawnInvincibilityTimerIndex))).GetPlayerRespawnInvincibilityTimer(index);\r\n    }\r\n\r\n\r\n    public static TimerEntity GetPlayerRespawnTimer(this TimerContext context, Player index) {\r\n        return ((PlayerRespawnTimerIndex)(context.GetEntityIndex(Contexts.PlayerRespawnTimerIndex))).GetPlayerRespawnTimer(index);\r\n    }\r\n\r\n\r\n    public static GameEntity GetPlayerShip(this GameContext context, Player player) {\r\n        return ((PlayerShipIndex)(context.GetEntityIndex(Contexts.PlayerShipIndex))).GetPlayerShip(player);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<GameEntity> GetEntitiesWithScene(this GameContext context, UnityEngine.SceneManagement.Scene scene) {\r\n        return ((Entitas.EntityIndex<GameEntity, UnityEngine.SceneManagement.Scene>)context.GetEntityIndex(Contexts.Scene)).GetEntities(scene);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<TimerEntity> GetEntitiesWithScene(this TimerContext context, UnityEngine.SceneManagement.Scene scene) {\r\n        return ((Entitas.EntityIndex<TimerEntity, UnityEngine.SceneManagement.Scene>)context.GetEntityIndex(Contexts.Scene)).GetEntities(scene);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<StatusEntity> GetEntitiesWithScene(this StatusContext context, UnityEngine.SceneManagement.Scene scene) {\r\n        return ((Entitas.EntityIndex<StatusEntity, UnityEngine.SceneManagement.Scene>)context.GetEntityIndex(Contexts.Scene)).GetEntities(scene);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<UiEntity> GetEntitiesWithScene(this UiContext context, UnityEngine.SceneManagement.Scene scene) {\r\n        return ((Entitas.EntityIndex<UiEntity, UnityEngine.SceneManagement.Scene>)context.GetEntityIndex(Contexts.Scene)).GetEntities(scene);\r\n    }\r\n\r\n    public static UiEntity GetScoreDisplay(this UiContext context, Player index) {\r\n        return ((ScoreDisplayIndex)(context.GetEntityIndex(Contexts.ScoreDisplayIndex))).GetScoreDisplay(index);\r\n    }\r\n\r\n\r\n    public static GlobalEntity GetEntityWithSettingKey(this GlobalContext context, string key) {\r\n        return ((Entitas.PrimaryEntityIndex<GlobalEntity, string>)context.GetEntityIndex(Contexts.SettingKey)).GetEntity(key);\r\n    }\r\n\r\n    public static System.Collections.Generic.HashSet<StatusEntity> GetShotsFiredCounter(this StatusContext context, Player index) {\r\n        return ((ShotsFiredIndex)(context.GetEntityIndex(Contexts.ShotsFiredIndex))).GetShotsFiredCounter(index);\r\n    }\r\n\r\n\r\n    public static TimerEntity GetSpawnWaveDelayTimer(this TimerContext context, Player index) {\r\n        return ((SpawnWaveDelayTimerIndex)(context.GetEntityIndex(Contexts.SpawnWaveDelayTimerIndex))).GetSpawnWaveDelayTimer(index);\r\n    }\r\n\r\n\r\n    public static GlobalEntity GetStringSetting(this GlobalContext context, string key) {\r\n        return ((StringSettingIndex)(context.GetEntityIndex(Contexts.StringSettingIndex))).GetStringSetting(key);\r\n    }\r\n\r\n\r\n    public static UiEntity GetWaveDisplay(this UiContext context, Player index) {\r\n        return ((WaveDisplayIndex)(context.GetEntityIndex(Contexts.WaveDisplayIndex))).GetWaveDisplay(index);\r\n    }\r\n\r\n\r\n    public static System.Collections.Generic.HashSet<StatusEntity> GetWavesClearedCounter(this StatusContext context, Player index) {\r\n        return ((WavesClearedIndex)(context.GetEntityIndex(Contexts.WavesClearedIndex))).GetWavesClearedCounter(index);\r\n    }\r\n\r\n}\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("JetBrains.ForTea.TextTemplating", "42.42.42.42")]
    public class EntityIndexGeneratorTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
