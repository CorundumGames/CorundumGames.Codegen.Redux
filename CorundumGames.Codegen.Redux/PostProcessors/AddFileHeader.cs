using System.IO;
using System.Linq;
using DesperateDevs.CodeGeneration;
using JetBrains.Annotations;

namespace CorundumGames.CodeGeneration.Plugins.PostProcessors
{
    [PublicAPI]
    public sealed class AddFileHeader : IPostProcessor
    {
        public string name => "Add file header";

        public int priority => 0;

        public bool runInDryMode => true;


        public CodeGenFile[] PostProcess(CodeGenFile[] files)
        {
            foreach (var codeGenFile in files)
            {
                var commentStart = "";
                var commentLine = "";
                var commentEnd = "";
                var addHeader = true;

                var extension = Path.GetExtension(codeGenFile.fileName);
                switch (extension)
                {
                    case ".cs":
                    {
                        commentStart = BlockCommentStartCs;
                        commentLine = CommentLinePrefixCs;
                        commentEnd = BlockCommentEndCs;
                        break;
                    }
                    case ".xml":
                    {
                        commentStart = BlockCommentStartXml;
                        commentLine = CommentLinePrefixXml;
                        commentEnd = BlockCommentEndXml;
                        break;
                    }
                    default:
                    {
                        addHeader = false;
                        break;
                    }
                }

                if (addHeader)
                {
                    var message =
                            string.Format(AutoGeneratedMessage, codeGenFile.generatorName)
                                .Split('\n')
                                .Select(s => string.Concat(commentLine, s).TrimEnd())
                                .Select(s => string.Concat(s, "\n"))
                                .Aggregate(string.Concat)
                        ;

                    codeGenFile.fileContent = string.Concat(
                        commentStart,
                        message,
                        commentEnd,
                        codeGenFile.fileContent
                    );
                }
            }

            return files;
        }

        private const string AutoGeneratedMessage =
            @"<auto-generated>
    This code was generated by {0}.

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
</auto-generated>";

        private const string BlockCommentStartXml =
            @"<!--
";

        private const string CommentLinePrefixXml = "  ";

        private const string BlockCommentEndXml =
            @"-->
";

        private const string BlockCommentStartCs =
            @"//------------------------------------------------------------------------------
";

        private const string CommentLinePrefixCs = "// ";

        private const string BlockCommentEndCs = BlockCommentStartCs;
    }
}
