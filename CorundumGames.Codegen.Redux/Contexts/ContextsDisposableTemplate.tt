<#@ template language="C#" visibility="internal" #> 
<#@ import namespace="DesperateDevs.Utils" #>

public sealed partial class Contexts : System.IDisposable
{
    private bool _disposed;

    public void Dispose()
    {
        if (!_disposed)
        {
            System.GC.SuppressFinalize(this);
<#
    foreach (var c in _contextNames)
    {
#>
            <#= c.LowercaseFirst() #>?.Dispose();
<#
    }
#>
            foreach (var observer in UnityEngine.Object.FindObjectsOfType<Entitas.VisualDebugging.Unity.ContextObserverBehaviour>(true))
            {
                observer.contextObserver?.Deactivate();

                UnityEngine.Object.Destroy(observer.gameObject);
            }

            _disposed = true;
        }
    }

    ~Contexts()
    {
        Dispose();
    }
}
<#+
    private readonly string[] _contextNames;

    internal ContextsDisposableTemplate(string[] contextNames)
    {
        _contextNames = contextNames ?? throw new ArgumentNullException(nameof(contextNames));
    }
#>
