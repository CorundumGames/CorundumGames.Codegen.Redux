<#@ template language="C#" visibility="internal" #>
<#@ import namespace="DesperateDevs.Utils" #>

public partial class Contexts
{
    public Entitas.Entity CreateEntity(string type)
    {
        switch (type)
        {
<#
    foreach (var c in _contextNames)
    {
#>
            case "<#= c #>":
                return <#= c.LowercaseFirst() #>.CreateEntity();
<#
    } #>
            default:
                return null;
        }
    }
}

<#+
    private readonly string[] _contextNames;

    internal CreateEntityWithNameTemplate(string[] contextNames)
    {
        _contextNames = contextNames ?? throw new ArgumentNullException(nameof(contextNames));
    }
#>
